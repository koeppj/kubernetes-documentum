apiVersion: v1
kind: Secret
metadata:
  name: ${stackname}-server-secrets
  namespace: ${namespace}
type: Opaque
data:
  DM_DOCBASE_OWNER_PASSWORD: ${dm_docbase_owner_password_encoded}
  DM_DATABASE_ADMIN_PASSWORD: ${dm_database_admin_password_encoded}
  DM_DATABASE_OWNER_PASSWORD: ${dm_database_owner_password_encoded}
  DM_GR_REGISTRY_PASSWORD: ${dm_gr_registry_password_encoded}
  DM_PRESETS_PASSWORD: ${dm_presets_password_encoded}
  DM_PREFERENCES_PASSWORD: ${dm_preferences_password_encoded}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${stackname}-server-configmap
  namespace: ${namespace}
data:
  DM_DOCBROKER_PORT: "${dm_docbroker_port}"
  DM_DOCBROKER_NAME: "intdocbrker"
  DM_DOCBROKER_HOST: "${stackname}-docbroker-int"
  DM_DOCBROKER_EXT_PORT: "${dm_docbroker_ext_port}"
  DM_DOCBROKER_EXT_NAME: "extdocbroker"
  DM_DOCBROKER_EXT_HOST: "${stackname}-docbroker-ext"
  DM_DOCBROKER_EXT_IP: "${dm_docbroker_ext_ip}"
  DM_DOCBROKER_EXT_CONFIG: "yes"
  DM_DOCBASE_PORT: "${dm_docbase_port}"
  DM_DOCBASE_NAME: "${dm_docbase_name}"
  DM_DOCBASE_OWNER: "${dm_docbase_owner}"
  DM_DOCBASE_ID: "${dm_docbase_id}"
  DM_DOCBASE_DESC: "${dm_docbase_desc}"
  DM_SMTP_SERVER_NAME: "${dm_smtp_server_name}"
  DM_SMTP_EMAIL_ACCOUNT: "${dm_smtp_server_account}"
  DM_DATABASE_HOST: "${stackname}-database"
  DM_DATABASE_PORT: "${database_port}"
  DM_DATABASE_ADMIN_NAME: "${dm_database_admin_name}"
  DM_DATABASE_NAME: "${database_user}"
  DM_DATABASE_OWNER: "${database_user}"
  DM_APPSERVER_PORT: "${dm_appserver_port}"
  DM_SERVER_HOST: "${stackname}-server"
  DM_GR_REGISTRY_USER: dm_bof_registry"
  DM_GR_REGISTRY_REPO: "${dm_docbase_name}"
  DM_TS_PORT: "${dm_ts_port}"
  DM_TS_ADMIN_PORT: "${dm_ts_admin_port}"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  ${stackname}-server-ss
  namespace: ${namespace}
  labels:
    app:  ${stackname}-server
spec:
  serviceName: ${stackname}-server
  selector:
    matchLabels:
      app: ${stackname}-server
  replicas: 1
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 25%
    type: RollingUpdate
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      storageClassName: ${storage_class}
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 10Gi
  - metadata:
      name: dba
    spec:
      storageClassName: ${storage_class}
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 50Ki
  - metadata:
      name: config
    spec:
      storageClassName: ${storage_class}
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 50Ki
  - metadata:
      name: dfcdata
    spec:
      storageClassName: ${storage_class}
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 50Ki
  - metadata:
      name: presets
    spec:
      storageClassName: ${storage_class}
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 50Ki
  template:
    metadata:
      labels:
        app:  ${stackname}-server
    spec:
      nodeSelector:
        fastnode: "yes"
      terminationGracePeriodSeconds: 120
      containers:
      - name:  ${stackname}-server
        image:  ${dm_server_image}
        envFrom:
        - secretRef:
            name: ${stackname}-server-secrets
        - configMapRef:
            name: ${stackname}-server-configmap
        livenessProbe: 
          exec:
            command:
            - 'su'
            - '-c'
            - '/home/dmadmin/bin/dm_health_check.sh'
            - '-'
            - 'dmadmin'
          periodSeconds: 30
          failureThreshold: 3
          timeoutSeconds: 5
        startupProbe:
          exec:
            command:
            - 'stat'
            - '/opt/documentum/dba/running'
          periodSeconds: 60
          failureThreshold: 60
        lifecycle:
          preStop:
            exec:
              command:
              - 'su'
              - '-c'
              - '/home/dmadmin/home/bin/dm_shutdown.sh'
              - '-'
              - 'dmadmin'
        ports:
        - name: appserver
          containerPort: 9080
        - name: docbroker
          containerPort: 1489
        - name: docbrokerplus
          containerPort: 1490
        - name: docbrokerext
          containerPort: 1689
        - name: docbrokerextp
          containerPort: 1690
        - name: docbase
          containerPort: 50100
        - name: docbaseplusone
          containerPort: 50101
        - name: ts-port
          containerPort: 8081
        volumeMounts:
        - name: data
          mountPath: /var/lib/documentum
        - name: dba
          mountPath: /opt/documentum/dba
        - name: config
          mountPath: /opt/documentum/config
        - name: dfcdata
          mountPath: /opt/documentum/dfcdata
        - name: presets
          mountPath: /opt/documentum/presets
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: ${stackname}-server
  namespace: ${namespace}
spec:
  selector:
    app: ${stackname}-server
  ports:
  - port: 9080
    name: appserver
    targetPort: appserver
  - port: 50100
    protocol: TCP
    name: docbase
    targetPort: 50100
  - port: 50101
    name: docbaseone
    protocol: TCP
    targetPort: 50101
  - port: 8081
    name: ts-port
    targetPort: ts-port
---
apiVersion: v1
kind: Service
metadata:
  name: ${stackname}-docbroker-int
  namespace: ${namespace}
spec:
  selector:
    app: ${stackname}-server
  publishNotReadyAddresses: true
  ports:
  - port: 1489
    name: docbroker
    protocol: TCP
    targetPort: 1489
  - port: 1490
    name: docbrokerone
    protocol: TCP
    targetPort: 1490
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: ${stackname}-app-route
  namespace: ${namespace}
spec:
  parentRefs:
    - name: documentum-lan-gateway
      namespace: ${namespace}
      sectionName: appserver
  rules:
    - backendRefs:
      - name: ${stackname}-server
        namespace: ${namespace}
        port: 9080

